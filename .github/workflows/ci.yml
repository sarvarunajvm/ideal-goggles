name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr tesseract-ocr-eng tesseract-ocr-tam

    - name: Install Python dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Lint with ruff
      working-directory: ./backend
      run: ruff check .

    - name: Format check with black
      working-directory: ./backend
      run: black --check .

    - name: Type check with mypy
      working-directory: ./backend
      run: mypy src/

    - name: Test with pytest
      working-directory: ./backend
      run: pytest --cov=src --cov-report=xml

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: backend

  frontend-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 10

    - name: Install dependencies
      run: pnpm install --no-lockfile

    - name: Lint
      run: pnpm run lint

    - name: Type check
      run: pnpm run type-check

    - name: Unit tests
      run: pnpm run test:unit

    - name: Build frontend
      run: pnpm run build:frontend

  # P0 Critical E2E Tests - Fast, essential tests only
  e2e-critical:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    timeout-minutes: 10  # Strict timeout for CI

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 10

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr tesseract-ocr-eng tesseract-ocr-tam

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Install frontend dependencies
      run: pnpm install --no-lockfile

    - name: Build project
      run: pnpm run build

    - name: Install Playwright browsers (Chromium only)
      working-directory: ./tests
      run: |
        npx playwright install chromium --with-deps

    - name: Run P0 Critical Tests Only
      working-directory: ./tests
      env:
        CI: true
        SKIP_HEAVY_TESTS: true
      run: |
        echo "Running P0 critical tests only..."
        npx playwright test --config=playwright.config.ci.ts --grep @P0
        echo "P0 tests completed successfully!"

    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: tests/playwright-report

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-test-results
        path: tests/test-results
